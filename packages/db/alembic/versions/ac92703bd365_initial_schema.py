"""initial schema

Revision ID: ac92703bd365
Revises:
Create Date: 2025-08-11 12:12:10.247254

"""

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = 'ac92703bd365'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # Enable pgvector extension
    op.execute('CREATE EXTENSION IF NOT EXISTS vector')

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'users',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('email', sa.String(), nullable=False),
        sa.Column('first_name', sa.String(), nullable=False),
        sa.Column('last_name', sa.String(), nullable=False),
        sa.Column('phone_number', sa.String(), nullable=True),
        sa.Column(
            'created_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.Column(
            'updated_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.Column(
            'is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False
        ),
        sa.Column('address_street', sa.String(), nullable=True),
        sa.Column('address_city', sa.String(), nullable=True),
        sa.Column('address_state', sa.String(), nullable=True),
        sa.Column('address_zipcode', sa.String(), nullable=True),
        sa.Column(
            'address_country',
            sa.String(),
            server_default=sa.text("'US'"),
            nullable=True,
        ),
        sa.Column('credit_limit', sa.Numeric(precision=12, scale=2), nullable=True),
        sa.Column(
            'credit_balance',
            sa.Numeric(precision=12, scale=2),
            server_default=sa.text('0.00'),
            nullable=True,
        ),
        sa.Column(
            'location_consent_given',
            sa.Boolean(),
            server_default=sa.text('false'),
            nullable=False,
        ),
        sa.Column('last_app_location_latitude', sa.Float(), nullable=True),
        sa.Column('last_app_location_longitude', sa.Float(), nullable=True),
        sa.Column(
            'last_app_location_timestamp', sa.DateTime(timezone=True), nullable=True
        ),
        sa.Column('last_app_location_accuracy', sa.Float(), nullable=True),
        sa.Column('last_transaction_latitude', sa.Float(), nullable=True),
        sa.Column('last_transaction_longitude', sa.Float(), nullable=True),
        sa.Column(
            'last_transaction_timestamp', sa.DateTime(timezone=True), nullable=True
        ),
        sa.Column('last_transaction_city', sa.String(), nullable=True),
        sa.Column('last_transaction_state', sa.String(), nullable=True),
        sa.Column('last_transaction_country', sa.String(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email'),
    )
    op.create_index(
        'ix_users_city_state', 'users', ['address_city', 'address_state'], unique=False
    )
    op.create_index(
        'ix_users_location_consent', 'users', ['location_consent_given'], unique=False
    )
    op.create_table(
        'alert_rules',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('user_id', sa.String(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column(
            'is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False
        ),
        sa.Column(
            'alert_type',
            sa.Enum(
                'AMOUNT_THRESHOLD',
                'MERCHANT_CATEGORY',
                'MERCHANT_NAME',
                'LOCATION_BASED',
                'FREQUENCY_BASED',
                'PATTERN_BASED',
                'CUSTOM_QUERY',
                name='alert_type',
            ),
            nullable=False,
        ),
        sa.Column('amount_threshold', sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column('merchant_category', sa.String(), nullable=True),
        sa.Column('merchant_name', sa.String(), nullable=True),
        sa.Column('location', sa.String(), nullable=True),
        sa.Column('timeframe', sa.String(), nullable=True),
        sa.Column('natural_language_query', sa.String(), nullable=True),
        sa.Column(
            'notification_methods',
            postgresql.ARRAY(
                sa.Enum('EMAIL', 'SMS', 'PUSH', 'WEBHOOK', name='notification_method')
            ),
            nullable=True,
        ),
        sa.Column(
            'created_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.Column(
            'updated_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.Column('last_triggered', sa.DateTime(timezone=True), nullable=True),
        sa.Column(
            'trigger_count', sa.Integer(), server_default=sa.text('0'), nullable=False
        ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(
        'ix_alert_rules_user_active',
        'alert_rules',
        ['user_id', 'is_active'],
        unique=False,
    )
    op.create_table(
        'credit_cards',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('user_id', sa.String(), nullable=False),
        sa.Column('card_number', sa.String(), nullable=False),
        sa.Column('card_type', sa.String(), nullable=False),
        sa.Column('bank_name', sa.String(), nullable=False),
        sa.Column('card_holder_name', sa.String(), nullable=False),
        sa.Column('expiry_month', sa.Integer(), nullable=False),
        sa.Column('expiry_year', sa.Integer(), nullable=False),
        sa.Column(
            'is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False
        ),
        sa.Column(
            'created_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.Column(
            'updated_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'transactions',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('user_id', sa.String(), nullable=False),
        sa.Column('credit_card_num', sa.String(), nullable=False),
        sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column(
            'currency', sa.String(), server_default=sa.text("'USD'"), nullable=False
        ),
        sa.Column('description', sa.String(), nullable=False),
        sa.Column('merchant_name', sa.String(), nullable=False),
        sa.Column('merchant_category', sa.String(), nullable=False),
        sa.Column('transaction_date', sa.DateTime(timezone=True), nullable=False),
        sa.Column(
            'transaction_type',
            sa.Enum(
                'PURCHASE',
                'REFUND',
                'CASHBACK',
                'FEE',
                'INTEREST',
                'PAYMENT',
                name='transaction_type',
            ),
            server_default=sa.text("'PURCHASE'"),
            nullable=False,
        ),
        sa.Column('merchant_latitude', sa.Float(), nullable=True),
        sa.Column('merchant_longitude', sa.Float(), nullable=True),
        sa.Column('merchant_zipcode', sa.String(), nullable=True),
        sa.Column('merchant_city', sa.String(), nullable=True),
        sa.Column('merchant_state', sa.String(), nullable=True),
        sa.Column('merchant_country', sa.String(), nullable=True),
        sa.Column(
            'status',
            sa.Enum(
                'PENDING',
                'APPROVED',
                'DECLINED',
                'CANCELLED',
                'SETTLED',
                name='transactionstatus',
            ),
            server_default=sa.text("'PENDING'"),
            nullable=False,
        ),
        sa.Column('authorization_code', sa.String(), nullable=True),
        sa.Column('trans_num', sa.String(), nullable=True),
        sa.Column(
            'created_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.Column(
            'updated_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index('ix_transactions_amount', 'transactions', ['amount'], unique=False)
    op.create_index(
        'ix_transactions_category', 'transactions', ['merchant_category'], unique=False
    )
    op.create_index(
        'ix_transactions_user_date',
        'transactions',
        ['user_id', 'transaction_date'],
        unique=False,
    )
    op.create_table(
        'alert_notifications',
        sa.Column('id', sa.String(), nullable=False),
        sa.Column('user_id', sa.String(), nullable=False),
        sa.Column('alert_rule_id', sa.String(), nullable=False),
        sa.Column('transaction_id', sa.String(), nullable=True),
        sa.Column('title', sa.String(), nullable=False),
        sa.Column('message', sa.String(), nullable=False),
        sa.Column(
            'notification_method',
            sa.Enum('EMAIL', 'SMS', 'PUSH', 'WEBHOOK', name='notification_method'),
            nullable=False,
        ),
        sa.Column(
            'status',
            sa.Enum(
                'PENDING',
                'SENT',
                'DELIVERED',
                'FAILED',
                'READ',
                name='notificationstatus',
            ),
            server_default=sa.text("'PENDING'"),
            nullable=False,
        ),
        sa.Column('sent_at', sa.DateTime(timezone=True), nullable=True),
        sa.Column('delivered_at', sa.DateTime(timezone=True), nullable=True),
        sa.Column('read_at', sa.DateTime(timezone=True), nullable=True),
        sa.Column(
            'created_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.Column(
            'updated_at',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ['alert_rule_id'], ['alert_rules.id'], ondelete='CASCADE'
        ),
        sa.ForeignKeyConstraint(
            ['transaction_id'], ['transactions.id'], ondelete='SET NULL'
        ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('alert_notifications')
    op.drop_index('ix_transactions_user_date', table_name='transactions')
    op.drop_index('ix_transactions_category', table_name='transactions')
    op.drop_index('ix_transactions_amount', table_name='transactions')
    op.drop_table('transactions')
    op.drop_table('credit_cards')
    op.drop_index('ix_alert_rules_user_active', table_name='alert_rules')
    op.drop_table('alert_rules')
    op.drop_index('ix_users_location_consent', table_name='users')
    op.drop_index('ix_users_city_state', table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
